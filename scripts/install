#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

password=$YNH_APP_ARG_PASSWORD
app_nb=$YNH_APP_INSTANCE_NUMBER
mode=$YNH_APP_ARG_MODE
ssh_port=$(grep "^Port" /etc/ssh/sshd_config | awk '{print $2}' || echo "22")

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

# Ensure mode has a default value
if [ -z "${mode:-}" ]; then
    mode="static"
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

#=================================================
# CREATE A MYSQL DATABASE
#=================================================

if [ $database != "none" ]; then
    ynh_script_progression --message="Creating a database..." --weight=2

    db_name=$(ynh_sanitize_dbid --db_name=$app)
    db_user=$db_name
    db_pwd=$(ynh_string_random --length=30)
    ynh_app_setting_set --app=$app --key=db_name --value=$db_name
    ynh_app_setting_set --app=$app --key=db_user --value=$db_user
    ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd

    if [ $database == "mysql" ]; then
        ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    elif [ $database == "postgresql" ]; then
        ynh_psql_setup_db --db_user=$db_user --db_name=$db_name --db_pwd=$db_pwd
    fi
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

nginx_extra_conf_dir="/etc/nginx/conf.d/$domain.d/$app.d"
mkdir -p "$nginx_extra_conf_dir"

# Prepare nginx extra conf
if [ $phpversion != "none" ]
then
    ynh_add_config --template="nginx-php.conf" --destination="$nginx_extra_conf_dir/php.conf"
    YNH_PHP_VERSION="$phpversion"
fi

if [ $custom_error_file -eq 1 ]
then
    # Add the custom error build with the application
    ynh_add_config --template="nginx-code-error.conf" --destination="$nginx_extra_conf_dir/error-code.conf"
fi


# Create a dedicated NGINX config
ynh_add_nginx_config

# Add common configuration (always needed)
ynh_add_config --template="common.conf" --destination="$nginx_extra_conf_dir/common.conf"

# Add the routing mode configuration (only for non-static modes)
if [ "$mode" != "static" ]; then
    ynh_add_config --template="$mode.conf" --destination="$nginx_extra_conf_dir/$mode.conf"
fi

        # Store the mode setting
        ynh_app_setting_set --app=$app --key=mode --value="$mode"
        
        ynh_add_config --template="example-custom-nginx-config.conf" --destination="$nginx_extra_conf_dir/sample.conf"
        
#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

if [ $with_sftp -eq 1 ]
then
    groups="sftp.app"
else
    groups=""
fi

    ynh_system_user_create --username=$app --home_dir="$install_dir" --groups="$groups"

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

        mkdir -p "$install_dir/www"
        
        # Create public directory if using public mode
        if [ "$mode" = "public" ]; then
            mkdir -p "$install_dir/www/public"
        fi

        # Copy source files based on mode and SFTP settings
        if [ $with_sftp -eq 1 ]
        then
            if [ "$mode" = "front" ]
            then
                ynh_add_config --template="../sources/www/index_front.php" --destination="$install_dir/www/index.php"
            elif [ "$mode" = "public" ]
            then
                # In public mode, index.php goes in the public directory
                ynh_add_config --template="../sources/www/index_public.php" --destination="$install_dir/www/public/index.php"
            else
                # static mode
                ynh_add_config --template="../sources/www/index.html" --destination="$install_dir/www/index.html"
            fi
        else
            # No SFTP - use no_sftp version for static mode, or PHP versions for other modes
            if [ "$mode" = "front" ]
            then
                ynh_add_config --template="../sources/www/index_front.php" --destination="$install_dir/www/index.php"
            elif [ "$mode" = "public" ]
            then
                # In public mode, index.php goes in the public directory
                ynh_add_config --template="../sources/www/index_public.php" --destination="$install_dir/www/public/index.php"
            else
                # static mode without SFTP
                ynh_add_config --template="../sources/www/index_no_sftp.html" --destination="$install_dir/www/index.html"
            fi
        fi
        
        # Copy connection info files
        ynh_add_config --template="../sources/www/connection_info.txt" --destination="$install_dir/www/connection_info.txt"
        ynh_add_config --template="../sources/www/connection_info_fr.txt" --destination="$install_dir/www/connection_info_fr.txt"
        
        # If SFTP is enabled but no password provided, generate a random password
        if [ $with_sftp -eq 1 ] && [ -z "$password" ]; then
            password=$(ynh_string_random --length=12)
            ynh_print_info --message="No password provided for SFTP, generating a random password..."
            ynh_print_info --message="Generated password: $password - Please save it for SFTP access!"
        fi
        
        # Store the password setting only if SFTP is enabled
        if [ $with_sftp -eq 1 ]; then
            ynh_app_setting_set --app=$app --key=password --value="$password"
        fi
        
        # Set password for SFTP user if enabled
        if [ $with_sftp -eq 1 ] && [ -n "$password" ]; then
            chpasswd <<< "${app}:${password}"
        fi

chown -R $app:www-data "$install_dir"
# Home directory of the user needs to be owned by root to allow
# SFTP connections
chown root:root "$install_dir"
setfacl -m g:$app:r-x "$install_dir"
setfacl -m g:www-data:r-x "$install_dir"
chmod 750 "$install_dir"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

if [ $phpversion != "none" ]
then
    ynh_script_progression --message="Configuring PHP-FPM..." --weight=2

    # Create a dedicatedPHP-FPM config
    ynh_add_fpm_config
fi

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
